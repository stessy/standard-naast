/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package standardNaast.viewNew.members;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Collections;
import java.util.ResourceBundle;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

import standardNaast.entities.Personne;
import standardNaast.viewNew.Observer;
import standardNaast.viewNew.benevolat.BenevolatsTable;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.toedter.calendar.JDateChooser;

/**
 * 
 * @author stessy
 */
public class MembersForm extends javax.swing.JPanel implements Observer {

	/** The serialVersionUID. */
	private static final long serialVersionUID = 2659415728019939305L;

	ResourceBundle bundle = ResourceBundle.getBundle("Bundle");


	private void cotisationTableMouseClicked(final MouseEvent e) {
		// TODO add your code here
	}


	public MembersForm() {
		this.initComponents();
	}


	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		ResourceBundle bundle = ResourceBundle.getBundle("Bundle");
		this.memberDetailPanel = new JPanel();
		this.leftColumnPanel = new JPanel();
		this.nameTextField = new JTextField();
		this.nameLabel = new JLabel();
		this.addressTextArea = new JTextArea();
		this.addressLabel = new JLabel();
		this.phoneLabel = new JLabel();
		this.phoneTextField = new JTextField();
		this.identityCardValidityDateChooser = new JDateChooser();
		this.emailTextField = new JTextField();
		this.emailLabel = new JLabel();
		this.birthDataDateChooser = new JDateChooser();
		this.studentLabel = new JLabel();
		this.studentYesRadioButton = new JRadioButton();
		this.studentNoRadioButton = new JRadioButton();
		this.firstNameLabel = new JLabel();
		this.firstNameField = new JTextField();
		this.postalCodeLabel = new JLabel();
		this.postalCodeTextField = new JTextField();
		this.townLabel = new JLabel();
		this.townTextField = new JTextField();
		this.identityCartLabel = new JLabel();
		this.IdentityCardTextField = new JTextField();
		this.mobileLabel = new JLabel();
		this.mobileTextField = new JTextField();
		this.identityCardValidityLabel = new JLabel();
		this.birthDateLabel = new JLabel();
		this.memberNumberLabel = new JLabel();
		this.memberNumberTextField = new JTextField();
		this.panel4 = new JPanel();
		this.addMemberButton = new JButton();
		this.modifyMemberButton = new JButton();
		this.deleteMemberButton = new JButton();
		this.statisticsPanel = new JPanel();
		this.bottomPanel = new JPanel();
		this.deplacementsCarPanel = new JPanel();
		this.saisonLabel = new JLabel();
		this.comboBox1 = new JComboBox();
		this.domicileLabel = new JLabel();
		this.textField1 = new JTextField();
		this.exterieurLabel = new JLabel();
		this.textField2 = new JTextField();
		this.totalLabel = new JLabel();
		this.textField3 = new JTextField();
		this.abonnementsPanel = new JPanel();
		this.panel1 = new JPanel();
		this.abonnementsScrollPane = new JScrollPane();
		this.abonnementsTable = new JTable();
		this.abonnementButtonPanel = new JPanel();
		this.addAbonnementButton = new JButton();
		this.modifyAbonnementButton = new JButton();
		this.deleteAbonnementButton = new JButton();
		this.cotisationsPanel = new JPanel();
		this.scrollPane1 = new JScrollPane();
		this.cotisationTable = new JTable();
		this.panel3 = new JPanel();
		this.addCotisationButton = new JButton();
		this.modifyCotisationButton = new JButton();
		this.deleteCotisationButton = new JButton();
		this.benevolatsTable = new BenevolatsTable();
		this.personne = new Personne();
		CellConstraints cc = new CellConstraints();

		// ======== this ========
		this.setPreferredSize(new Dimension(1024, 768));
		this.setMinimumSize(new Dimension(1024, 768));
		this.setLayout(new FormLayout("default:grow", "fill:default, $lgap, fill:default:grow"));

		// ======== memberDetailPanel ========
		{
			this.memberDetailPanel.setBorder(new TitledBorder("D\u00e9tails du membre"));
			this.memberDetailPanel.setFocusTraversalPolicyProvider(true);
			this.memberDetailPanel.setLayout(new FormLayout("2*(default:grow(0.5))", "fill:default"));

			// ======== leftColumnPanel ========
			{
				this.leftColumnPanel.setBorder(new TitledBorder(bundle.getString("MembreForm.leftColumnPanel.border")));
				this.leftColumnPanel.setLayout(new FormLayout(
						"5*(default, $lcgap), 2*(default:grow(0.5), $lcgap), 3*(default, $lcgap), 61dlu:grow(0.5)",
						"8*(fill:default, $lgap), fill:default"));
				this.leftColumnPanel.add(this.nameTextField, cc.xywh(3, 1, 11, 1));

				// ---- nameLabel ----
				this.nameLabel.setText(bundle.getString("NOM"));
				this.nameLabel.setLabelFor(this.nameTextField);
				this.nameLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.nameLabel, cc.xy(1, 1));
				this.leftColumnPanel.add(this.addressTextArea, cc.xywh(3, 3, 19, 1));

				// ---- addressLabel ----
				this.addressLabel.setText(bundle.getString("ADRESSE"));
				this.addressLabel.setLabelFor(this.addressTextArea);
				this.addressLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.addressLabel, cc.xy(1, 3));

				// ---- phoneLabel ----
				this.phoneLabel.setText(bundle.getString("TELEPHONE"));
				this.phoneLabel.setLabelFor(this.phoneTextField);
				this.phoneLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.phoneLabel, cc.xy(1, 9));
				this.leftColumnPanel.add(this.phoneTextField, cc.xywh(3, 9, 9, 1));

				// ---- identityCardValidityDateChooser ----
				this.identityCardValidityDateChooser.setDateFormatString("dd MMMM yyyy");
				this.leftColumnPanel.add(this.identityCardValidityDateChooser, cc.xy(21, 11));
				this.leftColumnPanel.add(this.emailTextField, cc.xywh(3, 7, 19, 1));

				// ---- emailLabel ----
				this.emailLabel.setText(bundle.getString("EMAIL"));
				this.emailLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.emailLabel, cc.xy(1, 7));

				// ---- birthDataDateChooser ----
				this.birthDataDateChooser.setDateFormatString("dd MMMM yyyy");
				this.leftColumnPanel.add(this.birthDataDateChooser, cc.xy(21, 13));

				// ---- studentLabel ----
				this.studentLabel.setText(bundle.getString("ETUDIANT"));
				this.studentLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.studentLabel, cc.xy(1, 13));

				// ---- studentYesRadioButton ----
				this.studentYesRadioButton.setText(bundle.getString("OUI"));
				this.leftColumnPanel.add(this.studentYesRadioButton, cc.xy(3, 13));

				// ---- studentNoRadioButton ----
				this.studentNoRadioButton.setText(bundle.getString("NON"));
				this.leftColumnPanel.add(this.studentNoRadioButton, cc.xywh(5, 13, 7, 1));

				// ---- firstNameLabel ----
				this.firstNameLabel.setText(bundle.getString("PRENOM"));
				this.firstNameLabel.setLabelFor(this.firstNameField);
				this.firstNameLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.firstNameLabel, cc.xy(15, 1));
				this.leftColumnPanel.add(this.firstNameField, cc.xywh(17, 1, 5, 1));

				// ---- postalCodeLabel ----
				this.postalCodeLabel.setText(bundle.getString("CODE.POSTAL"));
				this.postalCodeLabel.setLabelFor(this.postalCodeTextField);
				this.postalCodeLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.postalCodeLabel, cc.xy(1, 5));
				this.leftColumnPanel.add(this.postalCodeTextField, cc.xywh(3, 5, 3, 1));

				// ---- townLabel ----
				this.townLabel.setText(bundle.getString("VILLE"));
				this.townLabel.setLabelFor(this.townTextField);
				this.townLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.townLabel, cc.xy(7, 5));
				this.leftColumnPanel.add(this.townTextField, cc.xywh(9, 5, 13, 1));

				// ---- identityCartLabel ----
				this.identityCartLabel.setText(bundle.getString("CARTE.IDENTITE"));
				this.identityCartLabel.setLabelFor(this.IdentityCardTextField);
				this.identityCartLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.identityCartLabel, cc.xywh(13, 9, 7, 1));
				this.leftColumnPanel.add(this.IdentityCardTextField, cc.xy(21, 9));

				// ---- mobileLabel ----
				this.mobileLabel.setText(bundle.getString("GSM"));
				this.mobileLabel.setLabelFor(this.mobileTextField);
				this.mobileLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.mobileLabel, cc.xy(1, 11));
				this.leftColumnPanel.add(this.mobileTextField, cc.xywh(3, 11, 9, 1));

				// ---- identityCardValidityLabel ----
				this.identityCardValidityLabel.setText(bundle.getString("IDENTITY.VALIDITY"));
				this.identityCardValidityLabel.setLabelFor(this.identityCardValidityDateChooser);
				this.identityCardValidityLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.identityCardValidityLabel, cc.xywh(13, 11, 7, 1));

				// ---- birthDateLabel ----
				this.birthDateLabel.setText(bundle.getString("DATE.NAISSANCE"));
				this.birthDateLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.birthDateLabel, cc.xywh(11, 13, 9, 1));

				// ---- memberNumberLabel ----
				this.memberNumberLabel.setText(bundle.getString("NUMERO.MEMBRE"));
				this.memberNumberLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.leftColumnPanel.add(this.memberNumberLabel, cc.xy(1, 15));

				// ---- memberNumberTextField ----
				this.memberNumberTextField.setEnabled(false);
				this.leftColumnPanel.add(this.memberNumberTextField, cc.xywh(3, 15, 5, 1));

				// ======== panel4 ========
				{
					this.panel4.setLayout(new FlowLayout(FlowLayout.RIGHT));

					// ---- addMemberButton ----
					this.addMemberButton.setText(bundle.getString("MembreForm.addMemberButton.text"));
					this.panel4.add(this.addMemberButton);

					// ---- modifyMemberButton ----
					this.modifyMemberButton.setText(bundle.getString("MembreForm.modifyMemberButton.text"));
					this.panel4.add(this.modifyMemberButton);

					// ---- deleteMemberButton ----
					this.deleteMemberButton.setText(bundle.getString("MembreForm.deleteMemberButton.text"));
					this.panel4.add(this.deleteMemberButton);
				}
				this.leftColumnPanel.add(this.panel4, cc.xywh(15, 17, 7, 1));
			}
			this.memberDetailPanel.add(this.leftColumnPanel, cc.xy(1, 1));

			// ======== statisticsPanel ========
			{
				this.statisticsPanel.setBorder(new TitledBorder(bundle.getString("MembreForm.statisticsPanel.border")));
				this.statisticsPanel
						.setLayout(new FormLayout("default, $lcgap, default", "2*(default, $lgap), default"));
			}
			this.memberDetailPanel.add(this.statisticsPanel, cc.xy(2, 1));
		}
		this.add(this.memberDetailPanel, cc.xy(1, 1));

		// ======== bottomPanel ========
		{
			this.bottomPanel.setLayout(new FormLayout("203dlu, $lcgap, default:grow",
					"fill:default:grow(0.5), $lgap, fill:default:grow(0.5)"));

			// ======== deplacementsCarPanel ========
			{
				this.deplacementsCarPanel.setBorder(new TitledBorder("D\u00e9placements car"));
				this.deplacementsCarPanel
						.setLayout(new FormLayout(
								"right:default:grow(0.19999999999999998), default:grow(0.19999999999999998), default:grow(0.7), default",
								"fill:default, 3*($lgap, default)"));

				// ---- saisonLabel ----
				this.saisonLabel.setText(bundle.getString("SAISON"));
				this.saisonLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.deplacementsCarPanel.add(this.saisonLabel, cc.xy(1, 1));
				this.deplacementsCarPanel.add(this.comboBox1, cc.xy(3, 1));

				// ---- domicileLabel ----
				this.domicileLabel.setText(bundle.getString("DOMICILE"));
				this.domicileLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.deplacementsCarPanel.add(this.domicileLabel, cc.xy(1, 3));

				// ---- textField1 ----
				this.textField1.setHorizontalAlignment(SwingConstants.CENTER);
				this.textField1.setEditable(false);
				this.textField1.setFont(new Font("Dialog", Font.BOLD, 12));
				this.deplacementsCarPanel.add(this.textField1, cc.xy(3, 3));

				// ---- exterieurLabel ----
				this.exterieurLabel.setText(bundle.getString("DEPLACEMENT"));
				this.exterieurLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.deplacementsCarPanel.add(this.exterieurLabel, cc.xy(1, 5));

				// ---- textField2 ----
				this.textField2.setHorizontalAlignment(SwingConstants.CENTER);
				this.textField2.setEditable(false);
				this.textField2.setFont(new Font("Dialog", Font.BOLD, 12));
				this.deplacementsCarPanel.add(this.textField2, cc.xy(3, 5));

				// ---- totalLabel ----
				this.totalLabel.setText(bundle.getString("TOTAL"));
				this.totalLabel.setHorizontalAlignment(SwingConstants.RIGHT);
				this.deplacementsCarPanel.add(this.totalLabel, cc.xy(1, 7));

				// ---- textField3 ----
				this.textField3.setHorizontalAlignment(SwingConstants.CENTER);
				this.textField3.setEditable(false);
				this.textField3.setFont(new Font("Dialog", Font.BOLD, 12));
				this.deplacementsCarPanel.add(this.textField3, cc.xy(3, 7));
			}
			this.bottomPanel.add(this.deplacementsCarPanel, cc.xy(1, 1));

			// ======== abonnementsPanel ========
			{
				this.abonnementsPanel.setBorder(new TitledBorder("Abonnements"));
				this.abonnementsPanel.setLayout(new FormLayout("default:grow, default", "default, $lgap, default"));

				// ======== panel1 ========
				{
					this.panel1.setLayout(new FormLayout("default:grow", "default, $lgap, default"));

					// ======== abonnementsScrollPane ========
					{

						// ---- abonnementsTable ----
						this.abonnementsTable.setModel(new DefaultTableModel(new Object[][] {
								{ null, null, null, null }, { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, }, new String[] { "Title 1", "Title 2", "Title 3",
								"Title 4" }));
						this.abonnementsScrollPane.setViewportView(this.abonnementsTable);
					}
					this.panel1.add(this.abonnementsScrollPane, cc.xy(1, 1));

					// ======== abonnementButtonPanel ========
					{
						this.abonnementButtonPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));

						// ---- addAbonnementButton ----
						this.addAbonnementButton.setText(bundle.getString("MembreForm.addAbonnementButton.text"));
						this.abonnementButtonPanel.add(this.addAbonnementButton);

						// ---- modifyAbonnementButton ----
						this.modifyAbonnementButton.setText(bundle.getString("MembreForm.modifyAbonnementButton.text"));
						this.abonnementButtonPanel.add(this.modifyAbonnementButton);

						// ---- deleteAbonnementButton ----
						this.deleteAbonnementButton.setText(bundle.getString("MembreForm.deleteAbonnementButton.text"));
						this.abonnementButtonPanel.add(this.deleteAbonnementButton);
					}
					this.panel1.add(this.abonnementButtonPanel, cc.xy(1, 3));
				}
				this.abonnementsPanel.add(this.panel1, cc.xy(1, 1));
			}
			this.bottomPanel.add(this.abonnementsPanel, cc.xy(3, 1));

			// ======== cotisationsPanel ========
			{
				this.cotisationsPanel.setBorder(new TitledBorder("Cotisations"));
				this.cotisationsPanel.setPreferredSize(new Dimension(33, 43));
				this.cotisationsPanel.setLayout(new FormLayout("default:grow(0.5)", "default, $lgap, default"));

				// ======== scrollPane1 ========
				{

					// ---- cotisationTable ----
					this.cotisationTable.addMouseListener(new MouseAdapter() {

						@Override
						public void mouseClicked(final MouseEvent e) {
							MembersForm.this.cotisationTableMouseClicked(e);
						}
					});
					this.scrollPane1.setViewportView(this.cotisationTable);
				}
				this.cotisationsPanel.add(this.scrollPane1, cc.xy(1, 1));

				// ======== panel3 ========
				{
					this.panel3.setLayout(new FlowLayout(FlowLayout.RIGHT));

					// ---- addCotisationButton ----
					this.addCotisationButton.setText(bundle.getString("AJOUTER"));
					this.panel3.add(this.addCotisationButton);

					// ---- modifyCotisationButton ----
					this.modifyCotisationButton.setText(bundle.getString("MODIFY"));
					this.panel3.add(this.modifyCotisationButton);

					// ---- deleteCotisationButton ----
					this.deleteCotisationButton.setText(bundle.getString("DELETE"));
					this.panel3.add(this.deleteCotisationButton);
				}
				this.cotisationsPanel.add(this.panel3, cc.xy(1, 3));
			}
			this.bottomPanel.add(this.cotisationsPanel, cc.xy(1, 3));
			this.bottomPanel.add(this.benevolatsTable, cc.xy(3, 3));
		}
		this.add(this.bottomPanel, cc.xy(1, 3));

		// ---- buttonGroup1 ----
		ButtonGroup buttonGroup1 = new ButtonGroup();
		buttonGroup1.add(this.studentYesRadioButton);
		buttonGroup1.add(this.studentNoRadioButton);

		this.initComponentBindings();
	}// </editor-fold>//GEN-END:initComponents
		// Variables declaration - do not modify//GEN-BEGIN:variables

	private JPanel memberDetailPanel;

	private JPanel leftColumnPanel;

	private JTextField nameTextField;

	private JLabel nameLabel;

	private JTextArea addressTextArea;

	private JLabel addressLabel;

	private JLabel phoneLabel;

	private JTextField phoneTextField;

	private JDateChooser identityCardValidityDateChooser;

	private JTextField emailTextField;

	private JLabel emailLabel;

	private JDateChooser birthDataDateChooser;

	private JLabel studentLabel;

	private JRadioButton studentYesRadioButton;

	private JRadioButton studentNoRadioButton;

	private JLabel firstNameLabel;

	private JTextField firstNameField;

	private JLabel postalCodeLabel;

	private JTextField postalCodeTextField;

	private JLabel townLabel;

	private JTextField townTextField;

	private JLabel identityCartLabel;

	private JTextField IdentityCardTextField;

	private JLabel mobileLabel;

	private JTextField mobileTextField;

	private JLabel identityCardValidityLabel;

	private JLabel birthDateLabel;

	private JLabel memberNumberLabel;

	private JTextField memberNumberTextField;

	private JPanel panel4;

	private JButton addMemberButton;

	private JButton modifyMemberButton;

	private JButton deleteMemberButton;

	private JPanel statisticsPanel;

	private JPanel bottomPanel;

	private JPanel deplacementsCarPanel;

	private JLabel saisonLabel;

	private JComboBox comboBox1;

	private JLabel domicileLabel;

	private JTextField textField1;

	private JLabel exterieurLabel;

	private JTextField textField2;

	private JLabel totalLabel;

	private JTextField textField3;

	private JPanel abonnementsPanel;

	private JPanel panel1;

	private JScrollPane abonnementsScrollPane;

	private JTable abonnementsTable;

	private JPanel abonnementButtonPanel;

	private JButton addAbonnementButton;

	private JButton modifyAbonnementButton;

	private JButton deleteAbonnementButton;

	private JPanel cotisationsPanel;

	private JScrollPane scrollPane1;

	private JTable cotisationTable;

	private JPanel panel3;

	private JButton addCotisationButton;

	private JButton modifyCotisationButton;

	private JButton deleteCotisationButton;

	private BenevolatsTable benevolatsTable;

	private Personne personne;

	private BindingGroup bindingGroup;


	// End of variables declaration//GEN-END:variables

	private void initComponentBindings() {
		// JFormDesigner - Component bindings initialization - DO NOT MODIFY //GEN-BEGIN:initBindings
		this.bindingGroup = new BindingGroup();
		{
			JTableBinding binding =
					SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this.personne,
							(BeanProperty) BeanProperty.create("abonnementList"), this.abonnementsTable);
			binding.setEditable(false);
			binding.addColumnBinding(BeanProperty.create("saison.id"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName.1"))
					.setColumnClass(String.class).setEditable(false);
			binding.addColumnBinding(BeanProperty.create("blocId.blocValue"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_2"))
					.setColumnClass(String.class);
			binding.addColumnBinding(BeanProperty.create("rang"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_3"))
					.setColumnClass(String.class);
			binding.addColumnBinding(BeanProperty.create("place"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_4"))
					.setColumnClass(String.class);
			binding.addColumnBinding(BeanProperty.create("acompte"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_5"))
					.setColumnClass(BigInteger.class);
			binding.addColumnBinding(BeanProperty.create("reduction"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_6"))
					.setColumnClass(Long.class);
			binding.addColumnBinding(BeanProperty.create("paye"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_7"))
					.setColumnClass(Boolean.class);
			binding.addColumnBinding(BeanProperty.create("placeCommandee"))
					.setColumnName(this.bundle.getString("MembreForm.abonnementsTable.columnName_8"))
					.setColumnClass(Boolean.class);
			this.bindingGroup.addBinding(binding);
		}
		{
			JTableBinding binding =
					SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this.personne,
							(BeanProperty) BeanProperty.create("cotisations"), this.cotisationTable,
							"cotisationsTableBinding");
			binding.setEditable(false);
			binding.addColumnBinding(BeanProperty.create("anneeCotisation2"))
					.setColumnName(this.bundle.getString("MembreForm.cotisationTable.columnName.1"))
					.setColumnClass(Short.class);
			binding.addColumnBinding(BeanProperty.create("montantCotisation"))
					.setColumnName(this.bundle.getString("MembreForm.cotisationTable.columnName_2"))
					.setColumnClass(BigDecimal.class);
			binding.setSourceNullValue(Collections.EMPTY_LIST);
			binding.setSourceUnreadableValue(Collections.EMPTY_LIST);
			binding.setTargetNullValue(Collections.EMPTY_LIST);
			this.bindingGroup.addBinding(binding);
		}
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("firstname"), this.firstNameField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("name"), this.nameTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("address"), this.addressTextArea, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("postalCode"), this.postalCodeTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("city"), this.townTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("phone"), this.phoneTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("mobilePhone"), this.mobileTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("passportValidity"), this.identityCardValidityDateChooser,
				BeanProperty.create("date")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("birthdate"), this.birthDataDateChooser, BeanProperty.create("date")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("email"), this.emailTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("memberNumber"), this.memberNumberTextField, BeanProperty.create("text")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("student"), this.studentYesRadioButton, BeanProperty.create("selected")));
		this.bindingGroup.addBinding(Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this.personne,
				BeanProperty.create("student"), this.studentNoRadioButton, BeanProperty.create("selected")));
		this.bindingGroup.bind();
		// JFormDesigner - End of component bindings initialization //GEN-END:initBindings
	}


	@Override
	public void update(final Personne personne) {
		this.setPerson(personne);
	}


	/**
	 * Refresh the binding when a person is selected in the table
	 * 
	 * @param person the personne to update
	 */
	public void setPerson(final Personne person) {
		this.bindingGroup.unbind();
		this.personne = person;
		this.initComponentBindings();
		this.benevolatsTable.setBenevolats(ObservableCollections.observableList(this.personne.getBenevolatList()));
	}

}
